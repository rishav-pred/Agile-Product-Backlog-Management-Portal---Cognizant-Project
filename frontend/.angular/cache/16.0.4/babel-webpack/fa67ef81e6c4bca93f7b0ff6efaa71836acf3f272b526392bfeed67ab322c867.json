{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UserstoryService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8086/productbacklog/userstories\";\n  }\n  getUserStoryLists() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createEpic(epic) {\n    return this.httpClient.post(`${this.baseURL}`, epic);\n  }\n}\nUserstoryService.ɵfac = function UserstoryService_Factory(t) {\n  return new (t || UserstoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserstoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserstoryService,\n  factory: UserstoryService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserstoryService };","map":{"version":3,"names":["UserstoryService","constructor","httpClient","baseURL","getUserStoryLists","get","createEpic","epic","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Cognizant\\frontend\\src\\app\\userstory.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Userstory } from './userstory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserstoryService {\n  \n  private baseURL = \"http://localhost:8086/productbacklog/userstories\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUserStoryLists() : Observable<Userstory[]>{\n    return this.httpClient.get<Userstory[]>(`${this.baseURL}`);\n  }\n\n\n  createEpic(epic: Userstory): Observable<any>{\n    return this.httpClient.post(`${this.baseURL}`, epic)\n  }\n\n}\n"],"mappings":";;AAKA,MAGaA,gBAAgB;EAI3BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAG,kDAAkD;EAEtB;EAE9CC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAc,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC5D;EAGAG,UAAUA,CAACC,IAAe;IACxB,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,IAAI,CAAC;EACtD;;AAbWP,gBAAgB,C;mBAAhBA,gBAAgB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBZ,gBAAgB,C;SAAhBA,gBAAgB;EAAAa,OAAA,EAAhBb,gBAAgB,CAAAc,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEPf,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}