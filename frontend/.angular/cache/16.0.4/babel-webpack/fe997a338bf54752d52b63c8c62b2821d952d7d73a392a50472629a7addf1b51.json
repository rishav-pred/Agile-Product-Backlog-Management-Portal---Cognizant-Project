{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass EpicService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8086/productbacklog/epics\";\n  }\n  getEpicLists() {\n    return this.httpClient.get(`${this.baseURL}` + 'epic');\n  }\n}\nEpicService.ɵfac = function EpicService_Factory(t) {\n  return new (t || EpicService)(i0.ɵɵinject(i1.HttpClient));\n};\nEpicService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EpicService,\n  factory: EpicService.ɵfac,\n  providedIn: 'root'\n});\nexport { EpicService };","map":{"version":3,"names":["EpicService","constructor","httpClient","baseURL","getEpicLists","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Cognizant\\frontend\\src\\app\\epic.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EpicService {\n\n\n  private baseURL = \"http://localhost:8086/productbacklog/epics\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getEpicLists() : Observable<any>{\n    return this.httpClient.get(`${this.baseURL}`+'epic');\n  }\n\n}\n"],"mappings":";;AAIA,MAGaA,WAAW;EAKtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAG,4CAA4C;EAEhB;EAE9CC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,EAAE,GAAC,MAAM,CAAC;EACtD;;AATWH,WAAW,C;mBAAXA,WAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXT,WAAW,C;SAAXA,WAAW;EAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}