{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Userstory } from './userstory';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UserstoryService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8086/productbacklog/userstories\";\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  getUserStoryLists() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createUserStory(userStory) {\n    return this.httpClient.post(`${this.baseURL}`, userStory);\n  }\n  getUserstoryById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateUserstory(id, userStory) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, Userstory);\n  }\n}\nUserstoryService.ɵfac = function UserstoryService_Factory(t) {\n  return new (t || UserstoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserstoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserstoryService,\n  factory: UserstoryService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserstoryService };\n// Example POST request\nthis.http.post(url, data, {\n  headers: headers\n});","map":{"version":3,"names":["HttpHeaders","Userstory","UserstoryService","constructor","httpClient","baseURL","headers","getUserStoryLists","get","createUserStory","userStory","post","getUserstoryById","id","updateUserstory","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","http","url","data"],"sources":["C:\\Cognizant\\frontend\\src\\app\\userstory.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Userstory } from './userstory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserstoryService {\n  \n  private baseURL = \"http://localhost:8086/productbacklog/userstories\";\n\n  constructor(private httpClient: HttpClient,\n   ) { }\n\n  getUserStoryLists() : Observable<Userstory[]>{\n    return this.httpClient.get<Userstory[]>(`${this.baseURL}`);\n  }\n\n\n  createUserStory(userStory: Userstory): Observable<any>{\n    return this.httpClient.post(`${this.baseURL}`, userStory)\n  }\n\n  getUserstoryById(id : number): Observable<Userstory>{\n    return this.httpClient.get<Userstory>(`${this.baseURL}/${id}`);\n  }\n\n  updateUserstory(id: number, userStory: Userstory): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, Userstory);\n  }\n\n\nconst headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n// Example POST request\nthis.http.post(url, data, { headers: headers });\n\n  \n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,SAAS,QAAQ,aAAa;;;AAEvC,MAGaC,gBAAgB;EAI3BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAG,kDAAkD;IAuBhE,KAAAC,OAAO,GAAG,IAAIN,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;EApBhE;EAELO,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAc,GAAG,IAAI,CAACH,OAAO,EAAE,CAAC;EAC5D;EAGAI,eAAeA,CAACC,SAAoB;IAClC,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,OAAO,EAAE,EAAEK,SAAS,CAAC;EAC3D;EAEAE,gBAAgBA,CAACC,EAAW;IAC1B,OAAO,IAAI,CAACT,UAAU,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,OAAO,IAAIQ,EAAE,EAAE,CAAC;EAChE;EAEAC,eAAeA,CAACD,EAAU,EAAEH,SAAoB;IAC9C,OAAO,IAAI,CAACN,UAAU,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,IAAIQ,EAAE,EAAE,EAAEZ,SAAS,CAAC;EAChE;;AAtBWC,gBAAgB,C;mBAAhBA,gBAAgB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBjB,gBAAgB,C;SAAhBA,gBAAgB;EAAAkB,OAAA,EAAhBlB,gBAAgB,CAAAmB,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEPpB,gBAAgB;AA2B7B;AACA,IAAI,CAACqB,IAAI,CAACZ,IAAI,CAACa,GAAG,EAAEC,IAAI,EAAE;EAAEnB,OAAO,EAAEA;AAAO,CAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}