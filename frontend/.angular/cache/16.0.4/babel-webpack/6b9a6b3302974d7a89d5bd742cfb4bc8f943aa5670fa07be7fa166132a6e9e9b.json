{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../report.service\";\nimport * as i2 from \"@angular/common\";\nfunction ViewreportComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", item_r1, \": \", ctx_r0.data[item_r1], \"\\n\");\n  }\n}\nclass ViewreportComponent {\n  constructor(reportService) {\n    this.reportService = reportService;\n    this.data = {\n      New: 0,\n      Done: 0,\n      Coding: 0,\n      Planning: 1,\n      Testing: 1\n    };\n  }\n  getReportById(id) {\n    this.reportService.getReportById(id).subscribe(response => {}, error => {\n      console.log(error);\n    });\n  }\n  getObjectKeys(obj) {\n    return Object.keys(obj);\n  }\n}\nViewreportComponent.ɵfac = function ViewreportComponent_Factory(t) {\n  return new (t || ViewreportComponent)(i0.ɵɵdirectiveInject(i1.ReportService));\n};\nViewreportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ViewreportComponent,\n  selectors: [[\"app-viewreport\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ViewreportComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ViewreportComponent_Template_button_click_0_listener() {\n        return ctx.getReportById(\"101\");\n      });\n      i0.ɵɵtext(1, \"Get Report\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ViewreportComponent_div_2_Template, 2, 2, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getObjectKeys(ctx.data));\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ViewreportComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","item_r1","ctx_r0","data","ViewreportComponent","constructor","reportService","New","Done","Coding","Planning","Testing","getReportById","id","subscribe","response","error","console","log","getObjectKeys","obj","Object","keys","ɵɵdirectiveInject","i1","ReportService","selectors","decls","vars","consts","template","ViewreportComponent_Template","rf","ctx","ɵɵlistener","ViewreportComponent_Template_button_click_0_listener","ɵɵtemplate","ViewreportComponent_div_2_Template","ɵɵproperty"],"sources":["C:\\Cognizant\\frontend\\src\\app\\viewreport\\viewreport.component.ts","C:\\Cognizant\\frontend\\src\\app\\viewreport\\viewreport.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ReportService } from '../report.service';\n\n@Component({\n  selector: 'app-viewreport',\n  templateUrl: './viewreport.component.html',\n  styleUrls: ['./viewreport.component.css']\n})\nexport class ViewreportComponent {\n  report: Map<string, number>;\n\n  constructor(private reportService: ReportService) { }\n\n\n  data: { [key: string]: number } = { New: 0 , Done: 0, Coding: 0, Planning: 1, Testing: 1 };\n\n\n  getReportById(id: any): void {\n    this.reportService.getReportById(id)\n      .subscribe(\n        (response)=>{\n          \n        }\n        ,\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  getObjectKeys(obj: { [key: string]: number }): string[] {\n    return Object.keys(obj);\n  }\n  \n}\n","<button (click)=\"getReportById('101')\">Get Report</button>\n<div *ngFor=\"let item of getObjectKeys(data)\">\n    {{ item }}: {{ data[item] }}\n</div>\n  \n<!-- <h2> Epic List </h2>\n<table class=\"table table-striped\" style=\"text-align: center; padding: 8px; border: 2px solid black; border-bottom: 1px solid #ccc;\">\n<thead>\n    <tr>\n        <th>Stage</th>\n        <th>Count</th>\n        \n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let reports of mapArray\">\n        <td> {{ reports.New }}</td>\n        <td>{{  reports.Done  }}</td>\n        <td> {{ epic.projectCode }}</td>\n        <td> {{ epic.sprintId }}</td>\n        <td> {{ epic.name }}</td>\n        <td> {{ epic.createdOn }}</td>\n        <td> {{ epic.completedOn }}</td>\n        <td> {{ epic.status }}</td>\n    </tr>\n</tbody>\n</table> -->\n"],"mappings":";;;;;ICCAA,EAAA,CAAAC,cAAA,UAA8C;IAC1CD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IADFH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,QAAAC,MAAA,CAAAC,IAAA,CAAAF,OAAA,QACJ;;;ADAA,MAKaG,mBAAmB;EAG9BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAGjC,KAAAH,IAAI,GAA8B;MAAEI,GAAG,EAAE,CAAC;MAAGC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAC,CAAE;EAHtC;EAMpDC,aAAaA,CAACC,EAAO;IACnB,IAAI,CAACP,aAAa,CAACM,aAAa,CAACC,EAAE,CAAC,CACjCC,SAAS,CACPC,QAAQ,IAAG,CAEZ,CAAC,EAEAC,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;EACL;EAEAG,aAAaA,CAACC,GAA8B;IAC1C,OAAOC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC;EACzB;;AAxBWhB,mBAAmB,C;mBAAnBA,mBAAmB,EAAAT,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAAnBrB,mBAAmB,C;QAAnBA,mBAAmB;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRhCrC,EAAA,CAAAC,cAAA,gBAAuC;MAA/BD,EAAA,CAAAuC,UAAA,mBAAAC,qDAAA;QAAA,OAASF,GAAA,CAAArB,aAAA,CAAc,KAAK,CAAC;MAAA,EAAC;MAACjB,EAAA,CAAAE,MAAA,iBAAU;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAC1DH,EAAA,CAAAyC,UAAA,IAAAC,kCAAA,iBAEM;;;MAFgB1C,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAA2C,UAAA,YAAAL,GAAA,CAAAd,aAAA,CAAAc,GAAA,CAAA9B,IAAA,EAAsB;;;;;;SDO/BC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}